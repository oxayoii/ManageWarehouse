// <auto-generated />
using System;
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataBase.Models.DocumentEntrance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DocumentEntrances");
                });

            modelBuilder.Entity("DataBase.Models.Resourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Resourses");
                });

            modelBuilder.Entity("DataBase.Models.ResourseEntrance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("DocumentEntranceId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourseId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitMeansureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DocumentEntranceId");

                    b.HasIndex("ResourseId");

                    b.HasIndex("UnitMeansureId");

                    b.ToTable("ResourseEntrances");
                });

            modelBuilder.Entity("DataBase.Models.UnitMeansure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnitMeansures");
                });

            modelBuilder.Entity("DataBase.Models.ResourseEntrance", b =>
                {
                    b.HasOne("DataBase.Models.DocumentEntrance", "DocumentEntrance")
                        .WithMany("ResourseEntrances")
                        .HasForeignKey("DocumentEntranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Models.Resourse", "Resourse")
                        .WithMany("ResourseEntrances")
                        .HasForeignKey("ResourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Models.UnitMeansure", "UnitMeansure")
                        .WithMany("ResourseEntrances")
                        .HasForeignKey("UnitMeansureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentEntrance");

                    b.Navigation("Resourse");

                    b.Navigation("UnitMeansure");
                });

            modelBuilder.Entity("DataBase.Models.DocumentEntrance", b =>
                {
                    b.Navigation("ResourseEntrances");
                });

            modelBuilder.Entity("DataBase.Models.Resourse", b =>
                {
                    b.Navigation("ResourseEntrances");
                });

            modelBuilder.Entity("DataBase.Models.UnitMeansure", b =>
                {
                    b.Navigation("ResourseEntrances");
                });
#pragma warning restore 612, 618
        }
    }
}
